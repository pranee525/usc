[*.cs]

# Check the rules here: https://github.com/JosefPihrt/Roslynator/blob/master/src/Analyzers/README.md

dotnet_diagnostic.RCS1001.severity = error
dotnet_diagnostic.RCS1002.severity = error
dotnet_diagnostic.RCS1003.severity = error
dotnet_diagnostic.RCS1004.severity = error
dotnet_diagnostic.RCS1005.severity = error
dotnet_diagnostic.RCS1006.severity = error
dotnet_diagnostic.RCS1007.severity = none # Add braces - I like less braces on single lines.
dotnet_diagnostic.RCS1008.severity = suggestion # Use explicit type instead of 'var' (when the type is not obvious) - Too many to fix!
dotnet_diagnostic.RCS1009.severity = suggestion # Use explicit type instead of 'var' (foreach variable) - Too many to fix!
dotnet_diagnostic.RCS1010.severity = none # Use 'var' instead of explicit type (when the type is obvious) - I prefer explicit vars for code review.
dotnet_diagnostic.RCS1011.severity = error
dotnet_diagnostic.RCS1012.severity = suggestion # Use explicit type instead of 'var' (when the type is obvious) - Too many to fix!
dotnet_diagnostic.RCS1013.severity = none # Use predefined type - I think it's better to use String over string.
dotnet_diagnostic.RCS1014.severity = none # Avoid implicitly-typed array - Seems not necessary.
dotnet_diagnostic.RCS1015.severity = error
dotnet_diagnostic.RCS1016.severity = error
dotnet_diagnostic.RCS1017.severity = suggestion # Avoid multiline expression body - Maybe a good idea.
dotnet_diagnostic.RCS1018.severity = error
dotnet_diagnostic.RCS1019.severity = error
dotnet_diagnostic.RCS1020.severity = error
dotnet_diagnostic.RCS1021.severity = none # Simplify lambda expression - Issue with autogenerated db code.
dotnet_diagnostic.RCS1022.severity = error
dotnet_diagnostic.RCS1023.severity = error
dotnet_diagnostic.RCS1024.severity = error
dotnet_diagnostic.RCS1025.severity = error
dotnet_diagnostic.RCS1026.severity = error
dotnet_diagnostic.RCS1027.severity = error
dotnet_diagnostic.RCS1028.severity = error
dotnet_diagnostic.RCS1029.severity = error
dotnet_diagnostic.RCS1030.severity = error
dotnet_diagnostic.RCS1031.severity = error
dotnet_diagnostic.RCS1032.severity = error
dotnet_diagnostic.RCS1033.severity = none
dotnet_diagnostic.RCS1034.severity = error
dotnet_diagnostic.RCS1035.severity = none # Remove redundant comma in initializer - I like the commas as it reduces edited lines in GitHub.
dotnet_diagnostic.RCS1036.severity = error
dotnet_diagnostic.RCS1037.severity = error
dotnet_diagnostic.RCS1038.severity = error
dotnet_diagnostic.RCS1039.severity = error
dotnet_diagnostic.RCS1040.severity = error
dotnet_diagnostic.RCS1041.severity = error
dotnet_diagnostic.RCS1042.severity = error
dotnet_diagnostic.RCS1043.severity = error
dotnet_diagnostic.RCS1044.severity = error
dotnet_diagnostic.RCS1045.severity = none # Rename private field to camel case with underscore - Should use RCS1045a when possible.
dotnet_diagnostic.RCS1046.severity = none # Asynchronous method name should end with 'Async'
dotnet_diagnostic.RCS1047.severity = error
dotnet_diagnostic.RCS1048.severity = error
dotnet_diagnostic.RCS1049.severity = none
dotnet_diagnostic.RCS1050.severity = none # Add argument list to object creation expression (or vice versa) - should implement RCS1050i in the future. Not available in this version.
dotnet_diagnostic.RCS1051.severity = none # Parenthesize condition of conditional expression - Enable RCS1051a later.
dotnet_diagnostic.RCS1052.severity = error
dotnet_diagnostic.RCS1053.severity = error
dotnet_diagnostic.RCS1054.severity = error
dotnet_diagnostic.RCS1055.severity = error
dotnet_diagnostic.RCS1056.severity = error
dotnet_diagnostic.RCS1057.severity = error
dotnet_diagnostic.RCS1058.severity = error
dotnet_diagnostic.RCS1059.severity = error
dotnet_diagnostic.RCS1060.severity = error
dotnet_diagnostic.RCS1061.severity = error
dotnet_diagnostic.RCS1062.severity = error
dotnet_diagnostic.RCS1063.severity = error
dotnet_diagnostic.RCS1064.severity = error
dotnet_diagnostic.RCS1065.severity = none # Avoid usage of while statement to create an inifinite loop - infinite loops should probably always be avoided anyway.
dotnet_diagnostic.RCS1066.severity = error
dotnet_diagnostic.RCS1067.severity = error
dotnet_diagnostic.RCS1068.severity = error
dotnet_diagnostic.RCS1069.severity = error
dotnet_diagnostic.RCS1070.severity = error
dotnet_diagnostic.RCS1071.severity = error
dotnet_diagnostic.RCS1072.severity = error
dotnet_diagnostic.RCS1073.severity = error
dotnet_diagnostic.RCS1074.severity = error
dotnet_diagnostic.RCS1075.severity = error
dotnet_diagnostic.RCS1076.severity = error
dotnet_diagnostic.RCS1077.severity = none # Optimize LINQ method call - lots of useful fixes but FirstOrDefault is not the same as Find (FirstOrDefault returns null, Find throws exception).
dotnet_diagnostic.RCS1078.severity = error
dotnet_diagnostic.RCS1079.severity = error
dotnet_diagnostic.RCS1080.severity = none # Use 'Count/Length' property instead of 'Any' method - Confused about "performance" improvement.
dotnet_diagnostic.RCS1081.severity = error
dotnet_diagnostic.RCS1082.severity = error
dotnet_diagnostic.RCS1083.severity = error
dotnet_diagnostic.RCS1084.severity = error
dotnet_diagnostic.RCS1085.severity = error
dotnet_diagnostic.RCS1086.severity = none # Use linefeed as newline - Doesn't matter.
dotnet_diagnostic.RCS1087.severity = none # Disabling this error
dotnet_diagnostic.RCS1088.severity = error
dotnet_diagnostic.RCS1089.severity = error
dotnet_diagnostic.RCS1090.severity = none # Call 'ConfigureAwait(false)' - Probably only necessary when a third party uses our API wrong (in a UI application). https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f
dotnet_diagnostic.RCS1091.severity = error
dotnet_diagnostic.RCS1092.severity = error
dotnet_diagnostic.RCS1093.severity = error
dotnet_diagnostic.RCS1094.severity = error
dotnet_diagnostic.RCS1095.severity = error
dotnet_diagnostic.RCS1096.severity = error
dotnet_diagnostic.RCS1097.severity = error
dotnet_diagnostic.RCS1098.severity = error
dotnet_diagnostic.RCS1099.severity = error
dotnet_diagnostic.RCS1100.severity = none # Format documentation summary on a single line
dotnet_diagnostic.RCS1101.severity = error
dotnet_diagnostic.RCS1102.severity = error
dotnet_diagnostic.RCS1103.severity = error
dotnet_diagnostic.RCS1104.severity = error
dotnet_diagnostic.RCS1105.severity = error
dotnet_diagnostic.RCS1106.severity = error
dotnet_diagnostic.RCS1107.severity = error
dotnet_diagnostic.RCS1108.severity = error
dotnet_diagnostic.RCS1109.severity = error
dotnet_diagnostic.RCS1110.severity = error
dotnet_diagnostic.RCS1111.severity = none # This with combination with RCS1031 makes assigning values in a switch statement impossible.
dotnet_diagnostic.RCS1112.severity = none # Multiple where makes it more readable
dotnet_diagnostic.RCS1113.severity = error
dotnet_diagnostic.RCS1114.severity = error
dotnet_diagnostic.RCS1115.severity = error
dotnet_diagnostic.RCS1116.severity = error
dotnet_diagnostic.RCS1117.severity = error
dotnet_diagnostic.RCS1118.severity = error
dotnet_diagnostic.RCS1119.severity = error
dotnet_diagnostic.RCS1120.severity = error
dotnet_diagnostic.RCS1121.severity = error
dotnet_diagnostic.RCS1122.severity = error
dotnet_diagnostic.RCS1123.severity = error
dotnet_diagnostic.RCS1124.severity = none # Inline local variable - Prefer named variables which make it clear what's being foreached over.
dotnet_diagnostic.RCS1125.severity = error
dotnet_diagnostic.RCS1126.severity = none # Add braces to if-else - I like no braces.
dotnet_diagnostic.RCS1127.severity = error
dotnet_diagnostic.RCS1128.severity = error
dotnet_diagnostic.RCS1129.severity = error
dotnet_diagnostic.RCS1130.severity = error
dotnet_diagnostic.RCS1131.severity = error
dotnet_diagnostic.RCS1132.severity = error
dotnet_diagnostic.RCS1133.severity = error
dotnet_diagnostic.RCS1134.severity = error
dotnet_diagnostic.RCS1135.severity = error
dotnet_diagnostic.RCS1136.severity = error
dotnet_diagnostic.RCS1137.severity = error
dotnet_diagnostic.RCS1138.severity = error
dotnet_diagnostic.RCS1139.severity = none # Add summary element to documentation comment - seems redundent if I have no summary but still want to explain some params.
dotnet_diagnostic.RCS1140.severity = error
dotnet_diagnostic.RCS1141.severity = none
dotnet_diagnostic.RCS1142.severity = none # Add 'typeparam' element to documentation comment - seems to throw errors on properties of a class when there should be no error.
dotnet_diagnostic.RCS1143.severity = error
dotnet_diagnostic.RCS1144.severity = error
dotnet_diagnostic.RCS1145.severity = error
dotnet_diagnostic.RCS1146.severity = error
dotnet_diagnostic.RCS1147.severity = error
dotnet_diagnostic.RCS1148.severity = error
dotnet_diagnostic.RCS1149.severity = error
dotnet_diagnostic.RCS1150.severity = error
dotnet_diagnostic.RCS1151.severity = error
dotnet_diagnostic.RCS1152.severity = error
dotnet_diagnostic.RCS1153.severity = error
dotnet_diagnostic.RCS1154.severity = error
dotnet_diagnostic.RCS1155.severity = error
dotnet_diagnostic.RCS1156.severity = error
dotnet_diagnostic.RCS1157.severity = error
dotnet_diagnostic.RCS1158.severity = error
dotnet_diagnostic.RCS1159.severity = error
dotnet_diagnostic.RCS1160.severity = error
dotnet_diagnostic.RCS1161.severity = error
dotnet_diagnostic.RCS1162.severity = error
dotnet_diagnostic.RCS1163.severity = error
dotnet_diagnostic.RCS1164.severity = error
dotnet_diagnostic.RCS1165.severity = none # Unconstrained type parameter checked for null
dotnet_diagnostic.RCS1166.severity = error
dotnet_diagnostic.RCS1167.severity = error
dotnet_diagnostic.RCS1168.severity = error
dotnet_diagnostic.RCS1169.severity = error
dotnet_diagnostic.RCS1170.severity = error
dotnet_diagnostic.RCS1171.severity = error
dotnet_diagnostic.RCS1172.severity = error
dotnet_diagnostic.RCS1173.severity = error
dotnet_diagnostic.RCS1174.severity = error
dotnet_diagnostic.RCS1175.severity = error
dotnet_diagnostic.RCS1176.severity = none # Use 'var' instead of explicit type (when the type is not obvious) - I prefer explicit vars for code review.
dotnet_diagnostic.RCS1177.severity = none # Use 'var' instead of explicit type (in foreach) - I prefer explicit vars for code review.
dotnet_diagnostic.RCS1178.severity = error
dotnet_diagnostic.RCS1179.severity = error
dotnet_diagnostic.RCS1180.severity = error
dotnet_diagnostic.RCS1181.severity = error
dotnet_diagnostic.RCS1182.severity = error
dotnet_diagnostic.RCS1183.severity = none
dotnet_diagnostic.RCS1184.severity = error
dotnet_diagnostic.RCS1185.severity = none # In some cases it makes the code less readable
dotnet_diagnostic.RCS1186.severity = error
dotnet_diagnostic.RCS1187.severity = error
dotnet_diagnostic.RCS1188.severity = error
dotnet_diagnostic.RCS1189.severity = error
dotnet_diagnostic.RCS1190.severity = error
dotnet_diagnostic.RCS1191.severity = error
dotnet_diagnostic.RCS1192.severity = error
dotnet_diagnostic.RCS1193.severity = error
dotnet_diagnostic.RCS1194.severity = error
dotnet_diagnostic.RCS1195.severity = error
dotnet_diagnostic.RCS1196.severity = error
dotnet_diagnostic.RCS1197.severity = error
dotnet_diagnostic.RCS1198.severity = none # Avoid unnecessary boxing of value type - I can't believe this makes a performance difference.
dotnet_diagnostic.RCS1199.severity = error
dotnet_diagnostic.RCS1200.severity = error
dotnet_diagnostic.RCS1201.severity = suggestion # Use method chaining - depends on the situation.
dotnet_diagnostic.RCS1202.severity = error
dotnet_diagnostic.RCS1203.severity = error
dotnet_diagnostic.RCS1204.severity = error
dotnet_diagnostic.RCS1205.severity = error
dotnet_diagnostic.RCS1206.severity = error
dotnet_diagnostic.RCS1207.severity = error
dotnet_diagnostic.RCS1208.severity = none # Reduce 'if' nesting - seemed buggy.
dotnet_diagnostic.RCS1209.severity = error
dotnet_diagnostic.RCS1210.severity = error
dotnet_diagnostic.RCS1211.severity = error
dotnet_diagnostic.RCS1212.severity = error
dotnet_diagnostic.RCS1213.severity = warning # Remove unused member declaration
dotnet_diagnostic.RCS1214.severity = error
dotnet_diagnostic.RCS1215.severity = error
dotnet_diagnostic.RCS1216.severity = error
dotnet_diagnostic.RCS1217.severity = error
dotnet_diagnostic.RCS1218.severity = error
dotnet_diagnostic.RCS1219.severity = none # Call 'Enumerable.Skip' and 'Enumerable.Any' instead of 'Enumerable.Count' - Tiny performance fix but makes the code confusing.
dotnet_diagnostic.RCS1220.severity = error
dotnet_diagnostic.RCS1221.severity = error
dotnet_diagnostic.RCS1222.severity = error
dotnet_diagnostic.RCS1223.severity = none # Mark publicly visible type with DebuggerDisplay attribute - I don't understand this one.
dotnet_diagnostic.RCS1224.severity = error
dotnet_diagnostic.RCS1225.severity = error
dotnet_diagnostic.RCS1226.severity = none
dotnet_diagnostic.RCS1227.severity = error
dotnet_diagnostic.RCS1228.severity = error
dotnet_diagnostic.RCS1229.severity = error
dotnet_diagnostic.RCS1230.severity = error
dotnet_diagnostic.RCS1231.severity = none # Make parameter ref read-only - breaks if `in` is used on Hangfire task. Hangfire throws: System.NotSupportedException: Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process. dotnet_diagnostic.RCS1232.severity = error
dotnet_diagnostic.RCS1232.severity = error
dotnet_diagnostic.RCS1233.severity = error
dotnet_diagnostic.RCS1234.severity = error
dotnet_diagnostic.RCS1235.severity = error
dotnet_diagnostic.RCS1236.severity = error
dotnet_diagnostic.RCS1237.severity = error
dotnet_diagnostic.RCS1238.severity = error
dotnet_diagnostic.RCS1239.severity = error
dotnet_diagnostic.RCS1240.severity = error
dotnet_diagnostic.RCS1241.severity = error
dotnet_diagnostic.RCS1242.severity = error
dotnet_diagnostic.RCS1243.severity = error
dotnet_diagnostic.RCS1244.severity = error
dotnet_diagnostic.RCS1245.severity = error
dotnet_diagnostic.RCS1246.severity = error

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = none
